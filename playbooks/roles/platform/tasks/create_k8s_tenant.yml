---
- name: Obtain session token
  uri:
    url: http://{{ primary_controller }}:8080/api/v1/login
    return_content: yes
    method: POST
    body_format: json
    body: { "name": "{{ credentials.site_admin_id }}", "password": "{{ credentials.site_admin_password }}" }
    status_code: 201
  register: session_res

- name: Create a fact with the session info from the API call  
  set_fact:
    session_id: "{{ session_res.location  | urlsplit('path') }}"
   
# Get the current list of K8s clusters 
- name: Get the current set of K8s clusters 
  uri:
    url: http://{{ primary_controller }}:8080/api/v2/k8scluster
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_id }}" 
      accept: "application/json"
    method: GET
    status_code: 200
  register: k8scluster_res

- name: Create a fact with the list of K8s cluster from the API call  
  set_fact:
    k8scluster_list: "{{ k8scluster_res.json }}"
    cacheable: True
    
- debug:
    msg: "Query string is: {{ k8scluster_id_query }}"    

# Parse the k8s cluster name and ID from the JSON result of the GET k8scluster call and set target cluster ID
- name: Parse the K8s cluster name and ID from the JSON result of the GET k8scluster call
  set_fact:
    # set the id of the cluster to delete if it matches the name of the supplied cluster
    k8s_tenant_cluster_id: "{{ item | json_query('cluster_id') }}"
    cacheable: true
  when: "{{ item | json_query('cluster_name') == k8s.tenant.cluster_name }}"  
  loop: "{{ k8scluster_list | json_query('_embedded.k8sclusters[*].{cluster_name: label.name, cluster_id: _links.self.href}') }}"

- name: Create inputfile to create K8s tenant.
  template:
    src: create_k8s_tenant.j2
    dest: "/tmp/{{ common.name }}_create_k8s_tenant.json"
    mode: 0777
    
- name: Create K8s tenant
  uri:
    url: http://{{ primary_controller }}:8080/api/v1/tenant
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_id }}" 
      accept: "*/*"
      Content-Type: "application/json"
    method: POST
    body_format: json
    body: "{{ lookup('file','/tmp/CICL_create_k8s_tenant.json') }}"
    status_code: 201
  register: tenant_res

- name: Log out of session
  uri:
    url: "{{ session_res.location }}"
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_id }}"  
    method: DELETE
    status_code: 204
  register: delsession_res

- debug:
    msg: "Session: {{ session_res.location  | urlsplit('path') }} -- Create K8s Tenant Result: {{ tenant_res.status }}"
