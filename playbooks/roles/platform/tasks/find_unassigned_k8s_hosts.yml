---
#
# This playbook finds k8s hosts that are in Ansible inventory but not in platform
#

# Validate vars for nodes to delete
- name: Obtain session token
  uri:
    url: "{{ platform.rest_protocol }}://{{ platform.controller }}:8080/api/v1/login"
    return_content: yes
    method: POST
    validate_certs: "{{ platform.validate_certs }}"
    body_format: json
    body: { "name": "{{ credentials.site_admin_id }}", "password": "{{ credentials.site_admin_password }}" }
    status_code: 201
  register: session_res

- name: Create a fact with the session info from the API call  
  set_fact:
    session_id: "{{ session_res.location  | urlsplit('path') }}"
    cacheable: True  

# Get the current set of k8shosts 
- name: Get the current set of k8shosts 
  uri:
    url: "{{ platform.rest_protocol }}://{{ platform.controller }}:8080/api/v2/worker/k8shost"
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_id }}" 
      accept: "application/json"
    method: GET
    validate_certs: "{{ platform.validate_certs }}"
    status_code: 200
  register: k8shost_res

- name: Create a fact with parsed list of k8s hosts from the API call  
  set_fact:
#    k8shosts_list: "{{ k8shost_res.json | json_query('_embedded.k8shosts[*].{ansible_host: ipaddr, host_id: _links.self.href, hostname: hostname, status: status, tags: tags}') }}"
    k8shosts_list: "{{ k8shost_res.json | json_query('_embedded.k8shosts[*].hostname') }}"
    cacheable: True

- debug:
    var: k8shosts_list

- debug:
    var: groups.k8s_workers

# At this point, k8shosts_list contains all k8s hosts in the platform
# now create the list of host ids to delete, and the list of host IPs to restore
- name: Create empty list
  set_fact:
    unassigned_k8s_hosts: []
    cacheable: True

- name: Create list of hosts to delete based on enumerated list of k8s hosts
  set_fact:
    unassigned_k8s_hosts: "{{ unassigned_k8s_hosts + [item] }}"
  when: item not in k8shosts_list
  loop: "{{ groups.k8s_workers }}"

- debug:
    var: unassigned_k8s_hosts | sort

- name: Save list of unassigned k8s hosts
  template:
    src: unassigned_k8s_hosts.j2
    dest: "/tmp/unassigned_k8s_hosts.txt"
    mode: 0777

- name: Log out of session
  uri:
    url: "{{ session_res.location }}"
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_id }}" 
    method: DELETE
    validate_certs: "{{ platform.validate_certs }}"
    status_code: 204
  register: session_res
