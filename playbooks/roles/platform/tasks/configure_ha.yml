---
- name: Prepare lockdown JSON input file for epicctl.
  template:
    src: lockdown.j2
    dest: "/tmp/{{ common.name }}_lockdown.json"
    mode: 0777

- name: Obtain session token
  uri:
    url: http://{{ groups.primary_controller[0] }}:8080/api/v1/login
    return_content: yes
    method: POST
    # Change below once we confirm this works
    body_format: json
    body: { "name": "admin", "password": "admin123" }
    status_code: 201
  register: session_res

- name: Put the site in lockdown
  uri:
    url: http://{{ groups.primary_controller[0] }}:8080/api/v1/lock
    return_content: yes
    session_token: "{{ session_res.location  | urlsplit('path') }}"
    headers:
      X-BDS-SESSION: "{{ lookup('file','/tmp/api_session_id') }}"  
    method: POST
    body_format: json
    body: "{{ lookup('file','/tmp/CICL_lockdown.json') }}"
    status_code: 201
  register: lock_res
  #failed_when: res.status != 200   
 
- name: Exit site lockdown
  uri:
    url: "{{ lock_res.location }}"
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ lookup('file','/tmp/api_session_id') }}"  
    method: DELETE
    status_code: 204
  register: unlock_res
  #failed_when: res.status != 200   

#- name: Run epicctl command to place system in lockdown mode
#  command: 'epicctl api post -a -u /api/v1/lock -f /tmp/{{ common.name }}_lockdown.json -p {{ common.platform }} -n {{ common.name }} -o /tmp/{{ common.name }}_lock'
#  register: res
#  failed_when: res.rc != 0
  #failed_when: false

#- name: Prepare configure HA JSON input file for epicctl.
#  template:
#    src: configure_ha.j2
#    dest: "/tmp/{{ common.name }}_configure_ha.json"
#    mode: 0777
  
#- name: Run epicctl command to configure HA
#  command: 'epicctl api put -a -u /api/v1/install/?install_ha -f /tmp/{{ common.name }}_configure_ha.json -p {{ common.platform }} -n {{ common.name }}'
#  register: res
#  failed_when: res.rc != 0
  #failed_when: false

- debug:
    msg: "Session: {{ session_token }} -- Lockdown result: {{ lock_res.content }} ---- Unlock status: {{ unlock_res.status }}"
     
