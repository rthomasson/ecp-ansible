---
  - name: Create a fact with the session info from the API call  
    set_fact:
      input_file: "/tmp/{{platform.name }}_add_k8s_hosts.yml"
      cacheable: True
  
  - name: Create a fact with the list of K8s hosts to be installed using the host inventory group if the list doesn't already exist   
    set_fact:
      ecp_k8s.hosts:  {{ groups.k8s_hosts }}
      cacheable: True
    when: ecp_k8s.hosts is undefined  

  - name: Prepare input file for epicctl (skipping any in repair_pool)
    template:
      src: add_k8s_hosts.j2
      dest: "{{ input_file }}"
      mode: 0777
  
  - debug:
      msg:
      - "*** Adding K8s Hosts ***"
      - "*** Input file content: "
      - "{{ lookup('template', 'add_k8s_hosts.j2') | to_nice_yaml }}"

  - name: Setting up and configuring k8s hosts.
    shell: epicctl op -f {{ input_file }} -n {{ platform.name }} --defaultpassword "{{ credentials.site_admin_password }}"
#    command: epicctl op -f {{ input_file }} -n {{ platform.name }}
    register: res
    failed_when: res.rc != 0

    
#    - name: Obtain session token
#      uri:
#        url: http://{{ platform.controller }}:8080/api/v1/login
#        return_content: yes
#        method: POST
#        body_format: json
#        body: { "name": "{{ credentials.site_admin_id }}", "password": "{{ credentials.site_admin_password }}" }
#        status_code: 201
#      register: session_res

#    - name: Create a fact with the session info from the API call  
#      set_fact:
#        session_id: "{{ session_res.location  | urlsplit('path') }}"
#        cacheable: True  
  
    # Get the current list of Host tages 
 #   - name: Get the current set of host tags 
 #     uri:
 #       url: http://{{ platform.controller }}:8080/api/v2/tag
 #       return_content: yes
 #       headers:
 #         X-BDS-SESSION: "{{ session_id }}" 
 #         accept: "application/json"
 #       method: GET
 #       status_code: 200
 #     register: host_tags_res
   
#    - name: Create a fact with parsed list of host tags from the API call  
#      set_fact:
#        host_tags_json: "{{ host_tags_res.json }}"
#        cacheable: True  

#    - name: Create a fact with the list of host tags from the JSON
#      set_fact:
#        host_tags: "{{ host_tags_res.json | json_query('_embedded.tags[*].{name: label.name, value: _links.self.href}') }}"
#        host_tags: "{{ host_tags_res.json | json_query('_embedded.tags[*].label.name') }}"
#        cacheable: true

#    - name: Create a fact with the list of host tags from the JSON
#      set_fact:
#        host_tag0: "{{ host_tags_json | json_query('embedded.tags[?label.name==tag].label.name') | regex_replace('^u', '') }}"
#        cacheable: true

 #   - name: Create a fact with the list of host tags from the JSON
 #     set_fact:
 #       host_tags_list: "{{ query('dict', host_tags_dict) }}"
 #       cacheable: true

 #   - debug:
 #       msg: "{{ 'Tag x: %s'|format(host_tags[0]) }}"
 #   - debug:
 #       msg: "Tag Name: {{ host_tags_json | json_query('_embedded.tags[?label.name==`dc_tag`].label.name') | replace('[u', '') | replace(']', '') | regex_replace('''', '') }}"
 #   - debug:
 #       msg: "YAML Tag Name: {{ host_tags_json | json_query('_embedded.tags[?label.name==`dc_tag`].label.name')|to_yaml|replace('[','')|replace(']\n', '') }}"
 
 #   - name: Add hosts to the current set of k8s hosts
 #     include_tasks: add_k8s_host_block.yml   
 #     loop: "{{ new_k8s_hosts }}"

 #   - name: Log out of session
 #     uri:
 #       url: "{{ session_res.location }}"
 #       return_content: yes
 #       headers:
 #         X-BDS-SESSION: "{{ session_id }}" 
 #       method: DELETE
 #       status_code: 204
 #     register: delsession_res

 #   - debug:
 #       msg: "Session: {{ session_res.location  | urlsplit('path') }} -- K8s hosts result: {{ res.stdout }}"
