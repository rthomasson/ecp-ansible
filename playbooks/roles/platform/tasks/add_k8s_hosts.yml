---
- name: Create a fact with the session info from the API call  
  set_fact:
    input_file: "/tmp/{{platform.name }}_add_k8s_hosts.yml"

- name: Create a fact for the lists of K8s hosts to add  
  set_fact:
    hosts_or_ips_to_add: "{{ hosts_or_ips_to_add|default([]) }}"
    hosts_to_add: "{{ hosts_to_add|default([]) }}"

# Validate vars for K8s computer master node hosts to add
- fail:
    msg: "Error: If you specify K8s compute cluster master nodes then the disk configuration, host names and tenant_storage flag must be provided"
  when: 
    (ecp_k8s.master_nodes is defined and ecp_k8s.master_nodes.hosts is undefined) or
    (ecp_k8s.master_nodes.hosts is defined and (ecp_k8s.master_nodes.hosts is not iterable or ecp_k8s.master_nodes.hosts|length < 1)) or
    (ecp_k8s.master_nodes is defined and ecp_k8s.master_nodes.disks.ephemeral_disks is undefined) or
    (ecp_k8s.master_nodes is defined and ecp_k8s.master_nodes.disks.ephemeral_disks is defined and (ecp_k8s.master_nodes.disks.ephemeral_disks is not iterable or ecp_k8s.master_nodes.disks.ephemeral_disks|length < 1)) or
    (ecp_k8s.master_nodes is defined and ecp_k8s.master_nodes.no_tenant_storage is undefined)
      
- name: Update the list of K8s hosts with the list of K8s master node hosts to be added    
  set_fact:
    hosts_or_ips_to_add:  "{{ hosts_or_ips_to_add + ecp_k8s.master_nodes.hosts }}"
  when: ecp_k8s.master_nodes.hosts is defined and ecp_k8s.master_nodes.hosts is iterable 

# Validate vars for K8s computer worker node hosts to add
- fail:
    msg: "Error: If you specify K8s compute cluster worker nodes then the disk configuration, host names and tenant_storage flag must be provided"
  when: 
    (ecp_k8s.worker_nodes is defined and ecp_k8s.worker_nodes.hosts is undefined) or
    (ecp_k8s.worker_nodes.hosts is defined and (ecp_k8s.worker_nodes.hosts is not iterable or ecp_k8s.worker_nodes.hosts|length < 1)) or
    (ecp_k8s.worker_nodes is defined and ecp_k8s.worker_nodes.disks.ephemeral_disks is undefined) or
    (ecp_k8s.worker_nodes is defined and ecp_k8s.worker_nodes.disks.ephemeral_disks is defined and (ecp_k8s.worker_nodes.disks.ephemeral_disks is not iterable or ecp_k8s.worker_nodes.disks.ephemeral_disks|length < 1)) or
    (ecp_k8s.worker_nodes is defined and ecp_k8s.worker_nodes.no_tenant_storage is undefined)
      
- name: If there are master nodes specified, add the list of K8s compute worker node hosts to the list   
  set_fact:
    hosts_or_ips_to_add:  "{{ hosts_or_ips_to_add + ecp_k8s.worker_nodes.hosts }}"
  when: 
    - ecp_k8s.worker_nodes.hosts is defined and ecp_k8s.worker_nodes.hosts is iterable 
  
# Validate vars for K8s Ingress nodes hosts to add
- fail:
    msg: "Error: If you specify K8s compute cluster ingress nodes, then the disk configuration, hosts and tenant_storage flag must be provided"
  when: 
    (ecp_k8s.ingress_nodes is defined and ecp_k8s.ingress_nodes.hosts is undefined) or
    (ecp_k8s.ingress_nodes.hosts is defined and (ecp_k8s.ingress_nodes.hosts is not iterable or ecp_k8s.ingress_nodes.hosts|length < 1)) or
    (ecp_k8s.ingress_nodes is defined and ecp_k8s.ingress_nodes.disks.ephemeral_disks is undefined) or
    (ecp_k8s.ingress_nodes is defined and ecp_k8s.ingress_nodes.disks.ephemeral_disks is defined and (ecp_k8s.ingress_nodes.disks.ephemeral_disks is not iterable or ecp_k8s.ingress_nodes.disks.ephemeral_disks|length < 1)) or
    (ecp_k8s.ingress_nodes is defined and ecp_k8s.ingress_nodes.no_tenant_storage is undefined)

- name: Update the list of K8s hosts with the list of K8s Ingress node hosts to be added    
  set_fact:
    hosts_or_ips_to_add:  "{{ hosts_or_ips_to_add + ecp_k8s.ingress_nodes.hosts }}"
  when:
    - ecp_k8s.ingress_nodes.hosts is defined and ecp_k8s.ingress_nodes.hosts is iterable

# Validate vars for K8s CP Worker nodes hosts to add
- fail:
    msg: "Error: If you specify K8s compute cluster CP Worker nodes, then the disk configuration, hosts and tenant_storage flag must be provided"
  when: 
    (ecp_k8s.cp_nodes is defined and ecp_k8s.cp_nodes.hosts is undefined) or
    (ecp_k8s.cp_nodes.hosts is defined and (ecp_k8s.cp_nodes.hosts is not iterable or ecp_k8s.cp_nodes.hosts|length < 1)) or
    (ecp_k8s.cp_nodes is defined and ecp_k8s.cp_nodes.disks.ephemeral_disks is undefined) or
    (ecp_k8s.cp_nodes is defined and ecp_k8s.cp_nodes.disks.ephemeral_disks is defined and (ecp_k8s.cp_nodes.disks.ephemeral_disks is not iterable or ecp_k8s.cp_nodes.disks.ephemeral_disks|length < 1)) or
    (ecp_k8s.cp_nodes is defined and ecp_k8s.cp_nodes.no_tenant_storage is undefined)
      
- name: Update the list of K8s hosts with the list of K8s CP Worker node hosts to be added    
  set_fact:
    hosts_or_ips_to_add:  "{{ hosts_or_ips_to_add + ecp_k8s.cp_nodes.hosts }}"
  when:
    - ecp_k8s.cp_nodes.hosts is defined and ecp_k8s.cp_nodes.hosts is iterable

# Validate vars for K8s data fabric master node hosts to add
- fail:
    msg: "Error: If you specify K8s data fabric master nodes then the disk configuration, host names and tenant_storage flag must be provided"
  when: 
    (ecp_k8s.df_master_nodes is defined and ecp_k8s.df_master_nodes.hosts is undefined) or
    (ecp_k8s.df_master_nodes.hosts is defined and (ecp_k8s.df_master_nodes.hosts is not iterable or ecp_k8s.df_master_nodes.hosts|length < 1)) or
    (ecp_k8s.df_master_nodes is defined and ecp_k8s.df_master_nodes.disks.ephemeral_disks is undefined) or
    (ecp_k8s.df_master_nodes is defined and ecp_k8s.df_master_nodes.disks.ephemeral_disks is defined and (ecp_k8s.df_master_nodes.disks.ephemeral_disks is not iterable or ecp_k8s.df_master_nodes.disks.ephemeral_disks|length < 1)) or
    (ecp_k8s.df_master_nodes is defined and ecp_k8s.df_master_nodes.disks.persistent_disks is undefined) or
    (ecp_k8s.df_master_nodes is defined and ecp_k8s.df_master_nodes.disks.persistent_disks is defined and (ecp_k8s.df_master_nodes.disks.persistent_disks is not iterable or ecp_k8s.df_master_nodes.disks.persistent_disks|length < 1)) or
    (ecp_k8s.df_master_nodes is defined and ecp_k8s.df_master_nodes.no_tenant_storage is undefined)
      
- name: Update the list of K8s hosts with the data fabric master node hosts to the list to be added    
  set_fact:
    hosts_or_ips_to_add:  "{{ hosts_or_ips_to_add + ecp_k8s.df_master_nodes.hosts }}"
  when: ecp_k8s.df_master_nodes.hosts is defined and ecp_k8s.df_master_nodes.hosts is iterable 

# Validate vars for K8s data fabric worker node hosts to add
- fail:
    msg: "Error: If you specify K8s data fabric worker nodes then the disk configuration, host names and tenant_storage flag must be provided"
  when: 
    (ecp_k8s.df_worker_nodes is defined and ecp_k8s.df_worker_nodes.hosts is undefined) or
    (ecp_k8s.df_worker_nodes.hosts is defined and (ecp_k8s.df_master_nodes.hosts is not iterable or ecp_k8s.df_worker_nodes.hosts|length < 1)) or
    (ecp_k8s.df_worker_nodes is defined and ecp_k8s.df_worker_nodes.disks.ephemeral_disks is undefined) or
    (ecp_k8s.df_worker_nodes is defined and ecp_k8s.df_worker_nodes.disks.ephemeral_disks is defined and (ecp_k8s.df_worker_nodes.disks.ephemeral_disks is not iterable or ecp_k8s.df_worker_nodes.disks.ephemeral_disks|length < 1)) or
    (ecp_k8s.df_worker_nodes is defined and ecp_k8s.df_worker_nodes.disks.persistent_disks is undefined) or
    (ecp_k8s.df_worker_nodes is defined and ecp_k8s.df_worker_nodes.disks.persistent_disks is defined and (ecp_k8s.df_worker_nodes.disks.persistent_disks is not iterable or ecp_k8s.df_worker_nodes.disks.persistent_disks|length < 1)) or
    (ecp_k8s.df_worker_nodes is defined and ecp_k8s.df_worker_nodes.no_tenant_storage is undefined)
      
- name: Update the list of K8s hosts with the data fabric worker node hosts to be added    
  set_fact:
    hosts_or_ips_to_add:  "{{ hosts_or_ips_to_add + ecp_k8s.df_worker_nodes.hosts }}"
  when: ecp_k8s.df_worker_nodes.hosts is defined and ecp_k8s.df_worker_nodes.hosts is iterable 

- name: Create a list with just the host names of the K8s hosts to be added    
  debug:
    msg:
    -  "Hostname: {{ item }}"
    -  "      IP: {{ hostvars[item].ansible_host }}"
  loop: "{{ groups['all'] }}"

- name: Create a list with just the host names of the K8s hosts to be added using the Ansible inventory for all host groups   
  set_fact:
    hosts_to_add: "{{ hosts_to_add + [ item ] }}"
  loop: "{{ groups['all'] }}"
  when: item in hosts_or_ips_to_add or hostvars[item].ansible_host in hosts_or_ips_to_add

- debug:
    msg:
    - "*** Preparing to add K8s Hosts to ECP ***"
    - "Hosts being added:"
    - "{{ hosts_to_add }}"

- name: Obtain session token
  uri:
    url: "{{ platform.rest_protocol }}://{{ platform.controller }}:8080/api/v1/login"
    return_content: yes
    method: POST
    validate_certs: "{{ platform.validate_certs }}"
    body_format: json
    body: { "name": "{{ ecp_credentials.site_admin_id }}", "password": "{{ ecp_credentials.site_admin_password }}" }
    status_code: 201
  register: session_res

- name: Create a fact with the session info from the API call  
  set_fact:
    session_id: "{{ session_res.location  | urlsplit('path') }}"
    cacheable: True  

# Get the current set of host tags defined in ECP. A host tag must be defined in ECP before it can be used with a K8s host 
- name: Get the current set of host tags defined in ECP 
  uri:
    url: "{{ platform.rest_protocol }}://{{ platform.controller }}:8080/api/v2/tag"
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_id }}" 
      accept: "application/json"
    method: GET
    validate_certs: "{{ platform.validate_certs }}"
    status_code: 200
  register: ecp_tags_res

- name: Create a fact with a parsed list of the current k8s hosts from the API call  
  set_fact:
    ecp_tags_list: "{{ ecp_tags_res.json | json_query('_embedded.tags[*].name: label.name') }}"

- name: Log out of session
  uri:
    url: "{{ session_res.location }}"
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_res.location  | urlsplit('path') }}"  
    method: DELETE
    validate_certs: "{{ platform.validate_certs }}"
    status_code: 204
  register: delsession_res

- debug:
    msg: "End Get Tags Session: {{ session_res.location  | urlsplit('path') }}"

# NOTE: Host tag labels for the K8s hosts being added are derived from Ansible inventory host inventory variables:
- name: Prepare input file for epicctl (skipping any in repair_pool)
  template:
    src: add_k8s_hosts.j2
    dest: "{{ input_file }}"
    mode: 0777
  
- debug:
    msg:
    - "*** Adding K8s Hosts ***"
    - "*** Input file content: "
    - "{{ lookup('template', 'add_k8s_hosts.j2') | to_nice_yaml }}"

# - name: Setting up and configuring k8s hosts.
#   shell: "epicctl op -f {{ input_file }} -n {{ platform.name }} --defaultpassword {{ ecp_credentials.site_admin_password }}"
#   register: res
#   failed_when: res.rc != 0
