---
- name: Obtain session token
  uri:
    url: "{{ platform.rest_protocol }}://{{ platform.controller }}:8080/api/v1/login"
    return_content: yes
    method: POST
    validate_certs: "{{ platform.validate_certs }}"
    body_format: json
    body: { "name": "{{ credentials.site_admin_id }}", "password": "{{ credentials.site_admin_password }}" }
    status_code: 201
  register: session_res

- debug:
    msg: "Session: {{ session_res.location  | urlsplit('path') }}"

- name: Set a fact with the path/filename for the lockdown reason
  set_fact:
    lockdown_reason: '{ "reason": "Configure gateway port mapping" }'
    cacheable: true

- name: Put the site in lockdown
  uri:
    url: "{{ platform.rest_protocol }}://{{ platform.controller }}:8080/api/v1/lock"
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_res.location | urlsplit('path') }}"  
    method: POST
    validate_certs: "{{ platform.validate_certs }}"
    body_format: json
    body: "{{ lockdown_reason }}"
    status_code: 201
  register: lockdown_res

- debug:
    msg: "Enter lockdown API call result: {{ lockdown_res.content }}"

- name: Set a fact with the file contents for the gateway config json
  set_fact:
    gateway_file_contents: "{{ lookup('template', 'configure_gateway_ports.j2') }}"
    cacheable: true

- debug:
    msg: 
    - "*** Configuring Gateway port mapping ***"
    - "Input file contents:"
    - "{{ gateway_file_contents }}"

- name: Make REST API call to configure gateway ports
  uri:
    url: "{{ platform.rest_protocol }}://{{ platform.controller }}:8080/api/v1/install?install_reconfig"
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_res.location | urlsplit('path') }}"
      accept: "application/json"
    method: PUT
    validate_certs: "{{ platform.validate_certs }}"
    body_format: json
    body: "{{ gateway_file_contents }}"
    status_code: 204
  register: config_gateway_res

- debug:
    msg: "Configure gateway API call result: {{ config_gateway_res.content }}"

- name: Exit site lockdown
  uri:
    url: "{{ lockdown_res.location }}"
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_res.location  | urlsplit('path') }}"  
    method: DELETE
    validate_certs: "{{ platform.validate_certs }}"
    status_code: 204
  register: clear_lockdown_res
  until: clear_lockdown_res.status == 204
  retries: 15 # 60 secs * 15 = 15 minutes
  delay: 60 # wait 1 minute

- debug:
    msg: "Exit lockdown API call result: {{ clear_lockdown_res.content }}"

- name: Log out of session
  uri:
    url: "{{ session_res.location }}"
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_res.location  | urlsplit('path') }}"  
    method: DELETE
    validate_certs: "{{ platform.validate_certs }}"
    status_code: 204
  register: delsession_res
