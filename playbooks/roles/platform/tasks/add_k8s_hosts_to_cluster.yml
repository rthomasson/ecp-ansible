---
- name: Obtain session token
  uri:
    url: http://{{ primary_controller }}:8080/api/v1/login
    return_content: yes
    method: POST
    body_format: json
    body: { "name": "{{ credentials.site_admin_id }}", "password": "{{ credentials.site_admin_password }}" }
    status_code: 201
  register: session_res

- name: Create a fact with the session info from the API call  
  set_fact:
    session_id: "{{ session_res.location  | urlsplit('path') }}"
    cacheable: True  

# Get the current set of k8shosts 
- name: Get the current set of k8shosts 
  uri:
    url: http://{{ primary_controller }}:8080/api/v2/worker/k8shost
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_id }}" 
      accept: "application/json"
    method: GET
    status_code: 200
  register: k8shost_res

- name: Create a fact with parsed list of k8s hosts from the API call  
  set_fact:
    k8shosts_list: "{{ k8shost_res.json | json_query('_embedded.k8shosts[*].{ansible_host: ipaddr, host_id: _links.self.href, hostname: hostname, status: status}') }}"
    cacheable: True  

- name: Create input file to add K8shost to K8s Cluster.
  template:
    src: add_k8s_hosts_to_cluster.j2
    dest: "/tmp/{{ common.name }}_add_k8s_hosts_to_cluster.json"
    mode: 0777
    
 # Get the current list of K8s clusters 
- name: Get the current set of K8s clusters 
  uri:
    url: http://{{ primary_controller }}:8080/api/v2/k8scluster
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_id }}" 
      accept: "application/json"
    method: GET
    status_code: 200
  register: k8scluster_res

- name: Create a fact with the list of K8s cluster from the API call  
  set_fact:
    k8scluster_list: "{{ k8scluster_res.json }}"
    cacheable: True
    
# Parse the k8s cluster name and ID from the JSON result of the GET k8scluster call and set target cluster ID
- name: Parse the K8s cluster name and ID from the JSON result of the GET k8scluster call
  set_fact:
    # set the id of the cluster to delete if it matches the name of the supplied cluster
    target_cluster_id: "{{ item | json_query('cluster_id') }}"
    cacheable: true
  when: "{{ item | json_query('cluster_name') == k8s.cluster.name }}"  
  loop: "{{ k8scluster_list | json_query('_embedded.k8sclusters[*].{cluster_name: label.name, cluster_id: _links.self.href}') }}"

- name: Add K8s host to Cluster
  uri:
    url: http://{{ primary_controller }}:8080{{ target_cluster_id }}/change_task
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_id }}" 
      accept: "*/*"
      Content-Type: "application/json"
    method: POST
    body_format: json
    body: "{{ lookup('file','/tmp/CICL_add_k8s_hosts_to_cluster.json') }}"
    status_code: 201
  register: cluster_res

#  - name: Poll the status of cluster creation by making get call to /api/v2/k8scluster/k8scluster_id
#    command: epicctl api get -u {{ jsonResp }} -n "OnPremSetup" -p {{ common.platform }} -o /tmp/get-response.json
#    vars:
#      getResp: "{{ (lookup('file', '/tmp/get-response.json') | from_json)['status'] }}"
#    register : res
#    failed_when: res.rc != 0
#    changed_when: false
#    retries: 30
#    delay: 60
#    until:  '"ready" == getResp'

#  - debug:
#      msg: "polling task finished"

- name: Log out of session
  uri:
    url: "{{ session_res.location }}"
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_id }}" 
    method: DELETE
    status_code: 204
  register: session_res

- debug:
    msg: "Session: {{ session_res.location  | urlsplit('path') }} -- Add K8s host to  Cluster finished."
