---
- name: Obtain session token
  uri:
    url: "{{ platform.rest_protocol }}://{{ platform.controller }}:8080/api/v1/login"
    return_content: yes
    method: POST
    validate_certs: "{{ platform.validate_certs }}"
    body_format: json
    body: { "name": "{{ credentials.site_admin_id }}", "password": "{{ credentials.site_admin_password }}" }
    status_code: 201
  register: session_res

- name: Create a fact with the session info from the API call  
  set_fact:
    session_id: "{{ session_res.location  | urlsplit('path') }}"
    cacheable: True  

# Get the current set of k8shosts 
- name: Get the current set of k8shosts 
  uri:
    url: "{{ platform.rest_protocol }}://{{ platform.controller }}:8080/api/v2/worker/k8shost"
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_id }}" 
      accept: "application/json"
    method: GET
    validate_certs: "{{ platform.validate_certs }}"
    status_code: 200
  register: k8shost_res

- name: Create a fact with parsed list of k8s hosts from the API call  
  set_fact:
    k8shosts_list: "{{ k8shost_res.json | json_query('_embedded.k8shosts[*].{ansible_host: ipaddr, host_id: _links.self.href, hostname: hostname, status: status}') }}"
    cacheable: True  

- debug:
    msg: "***Creating K8s Cluster***"
- debug:
    msg: "Cluster Master Node: {{ item }}"
  loop: "{{ ecp_k8s.cluster.master_nodes }}"

- debug:
    msg: "Cluster Ingress Node: {{ item }}"
  loop: "{{ ecp_k8s.cluster.ingress_nodes }}"

- debug:
    msg: "Cluster Worker Node: {{ item }}"
  loop: "{{ ecp_k8s.cluster.worker_nodes }}"
      
- name: Create K8s Cluster
  uri:
    url: "{{ platform.rest_protocol }}://{{ platform.controller }}:8080/api/v2/k8scluster"
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_id }}" 
      accept: "*/*"
      Content-Type: "application/json"
    method: POST
    validate_certs: "{{ platform.validate_certs }}"
    body_format: json
    body: "{{ lookup('template','create_k8s_cluster.j2') }}"
    status_code: 201
  register: cluster_res

#  - name: Poll the status of cluster creation by making get call to /api/v2/k8scluster/k8scluster_id
#    command: epicctl api get -u {{ jsonResp }} -n "OnPremSetup" -p {{ common.platform }} -o /tmp/get-response.json
#    vars:
#      getResp: "{{ (lookup('file', '/tmp/get-response.json') | from_json)['status'] }}"
#    register : res
#    failed_when: res.rc != 0
#    changed_when: false
#    retries: 30
#    delay: 60
#    until:  '"ready" == getResp'

#  - debug:
#      msg: "polling task finished"

- name: Log out of session
  uri:
    url: "{{ session_res.location }}"
    return_content: yes
    headers:
      X-BDS-SESSION: "{{ session_id }}" 
    method: DELETE
    validate_certs: "{{ platform.validate_certs }}"
    status_code: 204
  register: delsession_res

- debug:
    msg: "Create K8s Cluster result: {{ cluster_res.content }} -- Create K8s Cluster finished."

