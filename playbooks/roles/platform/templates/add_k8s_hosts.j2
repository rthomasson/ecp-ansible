{% for ecp_host in ecp_k8s.hosts if ecp_host not in groups.repair_pool or force_repair is defined and force_repair %}
---
op: K8sHostConfig
platform: {{ platform.type }}
parameters:
  verbose: true
  config:
{% if ecp_k8s.cluster.master_nodes is defined and hostvars[ecp_host].ansible_host in ecp_k8s.cluster.master_nodes %}
    ephemeral_disks: {{ecp_k8s.configuration.master_node_disks.ephemeral_disks|join(',') }}
{% if ecp_k8s.configuration.master_node_disks.no_tenant_storage is defined and not ecp_k8s.configuration.master_node_disks.no_tenant_storage %}
    persistent_disks: {{ ecp_k8s.configuration.master_node_disks.persistent_disks|join(',') }}
{% else %}
    persistent_disks:
{% endif %}
{% elif ecp_k8s.cluster.ingress_nodes is defined and hostvars[ecp_host].ansible_host in ecp_k8s.cluster.ingress_nodes %}
    ephemeral_disks: {{ecp_k8s.configuration.ingress_node_disks.ephemeral_disks|join(',') }}
{% if ecp_k8s.configuration.ingress_node_disks.no_tenant_storage is defined and not ecp_k8s.configuration.ingress_node_disks.no_tenant_storage %}
    persistent_disks: {{ ecp_k8s.configuration.ingress_node_disks.persistent_disks|join(',') }}
{% else %}
    persistent_disks:
{% endif %}
{% elif ecp_k8s.cluster.cp_nodes is defined and hostvars[ecp_host].ansible_host in ecp_k8s.cluster.cp_nodes %}
    ephemeral_disks: {{ecp_k8s.configuration.cp_node_disks.ephemeral_disks|join(',') }}
{% if ecp_k8s.configuration.cp_node_disks.no_tenant_storage is defined and not ecp_k8s.configuration.cp_node_disks.no_tenant_storage %}
    persistent_disks: {{ ecp_k8s.configuration.cp_node_disks.persistent_disks|join(',') }}
{% else %}
    persistent_disks:
{% endif %}
{% else %}
    ephemeral_disks: {{ecp_k8s.configuration.worker_node_disks.ephemeral_disks|join(',') }}
{% if ecp_k8s.configuration.worker_node_disks.no_tenant_storage is defined and not ecp_k8s.configuration.worker_node_disks.no_tenant_storage %}
    persistent_disks: {{ ecp_k8s.configuration.worker_node_disks.persistent_disks|join(',') }}
{% else %}
    persistent_disks:
{% endif %}
{% endif %}
    api_scheme: {{ platform.api_scheme }}
    install_type: {{ platform.install.install_type }}
{% set have_tags = false %}
{% if hostvars[ecp_host].tag_dc is defined or hostvars[ecp_host].tag_rack is defined or hostvars[ecp_host].tag_ru is defined or hostvars[ecp_host].tag_zone is defined %}
    tags:
{% set have_tags = true %}
{% endif %}
{% if hostvars[ecp_host].tag_dc is defined %}
      - name: dc_tag
        value: {{ hostvars[ecp_host].tag_dc }}
      - name: topology.kubernetes.io/region
        value: {{ hostvars[ecp_host].tag_dc }}
{% endif %}
{% if hostvars[ecp_host].tag_zone is defined %}
      - name: zone_tag
        value: {{ hostvars[ecp_host].tag_zone }}
      - name: topology.kubernetes.io/zone
        value: {{ hostvars[ecp_host].tag_zone }}
{% endif %}
{% if hostvars[ecp_host].tag_rack is defined %}
      - name: rack_tag
        value: {{ hostvars[ecp_host].tag_rack }}
{% endif %}
{% if hostvars[ecp_host].tag_ru is defined %}
      - name: ru_tag
        value: {{ hostvars[ecp_host].tag_ru }}
{% endif %}
{% if ecp_k8s.cluster.ingress_nodes is defined and hostvars[ecp_host].ansible_host in ecp_k8s.cluster.ingress_nodes %}
{% if have_tags == false %}
    tags:
{% set have_tags = true %}
{% endif %}
      - name: istio-ingressgateway
        value: true
{% endif %}
{% if ecp_k8s.cluster.cp_nodes is defined and hostvars[ecp_host].ansible_host in ecp_k8s.cluster.cp_nodes %}
{% if have_tags == false %}
    tags:
{% set have_tags = true %}
{% endif %}
      - name: istio-controlplane
        value: true
      - name: openebs-controlplane
        value: true
{% endif %}
  host:
{% if ecp_host | ipv4 %}
    internal_ip: {{ ecp_host }}
{% else %}
    internal_ip: {{ hostvars[ecp_host].ansible_host }}
{% endif %}
  ssh:
    username: {{ ecp_credentials.ssh.username }}
    access_type: {{ ecp_credentials.ssh.access_type }}
{% if ecp_credentials.ssh.access_type == 'password_access' %}
    password: {{ ecp_credentials.ssh.password }}
{% else %}
    keypair_file: {{ ecp_credentials.ssh.keypair_file }}
    keypair_name: {{ ecp_credentials.ssh.keypair_name }}
{% if ecp_credentials.ssh.key_passphrase is defined %}
    priv_keypair_password: {{ ecp_credentials.ssh.key_passphrase }}
{% endif %}
{% endif %}
{% endfor %}
