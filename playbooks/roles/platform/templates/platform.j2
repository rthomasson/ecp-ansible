---
{# Configure platform installation YAML file for epicctl #}
op: Init
parameters:
  config:
    api_scheme: {{ controller.api_scheme }}
    install_type: {{ platform.install_type }}
    install_as_root: {{ platform.install_as_root }}
  host:
{% if platform.controller | ipv4 %}
    host_ip: {{ platform.controller }}
{% else %}
    host_ip: {{ hostvars[platform.controller].ansible_host }}
{% endif %}
  ssh:
    username: {{ credentials.ssh.username }}
    access_type: {{ credentials.ssh.access_type }}
{% if credentials.ssh.access_type == 'password_access' %}
    password: {{ credentials.ssh.password }}
{% else %}
    keypair_file: {{ credentials.ssh.keypair_file }}
    keypair_name: {{ credentials.ssh.keypair_name }}
{% if credentials.ssh.key_passphrase is defined %}
    priv_keypair_password: {{ credentials.ssh.key_passphrase }}
{% endif %}
{% endif %}
  verbose: true
platform: {{ platform.type }}
---
op: ControllerSetup
parameters:
  config:
{% if platform.proxy is defined %}
    proxy_url: {{ platform.proxy }}
{% endif %}
{% if controller.ssl_cert_file is defined %}
    ssl_cert_file: {{ controller.ssl_cert_file }}
{% endif %}
{% if controller.ssl_cert_key_file is defined %}
    ssl_cert_key_file: {{ controller.ssl_cert_key_file }}
{% endif %}
    url_bin_path: {{ platform.bin_url }}
    install_type: {{ platform.install_type }}
    install_as_root: true
  host:
{% if platform.controller | ipv4 %}
    host_ip: {{ platform.controller }}
{% else %}
    host_ip: {{ hostvars[platform.controller].ansible_host }}
{% endif %}
  ssh:
    username: {{ credentials.ssh.username }}
    access_type: {{ credentials.ssh.access_type }}
{% if credentials.ssh.access_type == 'password_access' %}
    password: {{ credentials.ssh.password }}
{% else %}
    keypair_file: {{ credentials.ssh.keypair_file }}
    keypair_name: {{ credentials.ssh.keypair_name }}
{% if credentials.ssh.key_passphrase is defined %}
    priv_keypair_password: {{ credentials.ssh.key_passphrase }}
{% endif %}
{% endif %}
  verbose: true
platform: {{ platform.type }}
---
op: ControllerConfig
parameters:
  config:
    bd_domain: {{ controller.bd_domain }}
    bd_prefix: {{ controller.bd_prefix }}
    node_disks: {{ platform.disks.node_disks|join(',') }}
{% if platform.disks.no_tenant_storage is defined and not platform.disks.no_tenant_storage %}
    hdfs_disks: {{ platform.disks.hdfs_disks|join(',') }}
    no_tenant_storage: false
{% else %}
    hdfs_disks:  
    no_tenant_storage: true
{% endif %}
    no_tenant_isolation: {{ platform.no_tenant_isolation }}
    int_start_ip: {{ controller.int_start_ip }}
    int_end_ip: {{ controller.int_end_ip }}
    int_gw_ip: {{ controller.int_gw_ip }}
    int_nw_mask: {{ controller.int_nw_mask }}
    install_type: {{ platform.install_type }}
    install_as_root: true
  host:
{% if platform.controller | ipv4 %}
    host_ip: {{ platform.controller }}
{% else %}
    host_ip: {{ hostvars[platform.controller].ansible_host }}
{% endif %}
  ssh:
    username: {{ credentials.ssh.username }}
    access_type: {{ credentials.ssh.access_type }}
{% if credentials.ssh.access_type == 'password_access' %}
    password: {{ credentials.ssh.password }}
{% else %}
    keypair_file: {{ credentials.ssh.keypair_file }}
    keypair_name: {{ credentials.ssh.keypair_name }}
{% if credentials.ssh.key_passphrase is defined %}
    priv_keypair_password: {{ credentials.ssh.key_passphrase }}
{% endif %}
{% endif %}
  verbose: true
platform: {{ platform.type }}
{% if platform.gateways is undefined %}
{% set platform.gateways = groups.gateways %}
{% endif %}
{% for gw in platform.gateways %}
---
op: GatewayConfig
parameters:
  config:
    gateway_set_hostname: {{ gateway.gateway_set_hostname }}
    api_scheme: {{ controller.api_scheme }}
    install_type: {{ platform.install_type }}
    install_as_root: true
  host:
{% if gw | ipv4 %}   
    internal_ip: {{ gw }}
{% else %}
    internal_ip: {{ hostvars[gw].ansible_host }}
{% endif %}
  ssh:
    username: {{ credentials.ssh.username }}
    access_type: {{ credentials.ssh.access_type }}
{% if credentials.ssh.access_type == 'password_access' %}
    password: {{ credentials.ssh.password }}
{% else %}
    keypair_file: {{ credentials.ssh.keypair_file }}
    keypair_name: {{ credentials.ssh.keypair_name }}
{% if credentials.ssh.key_passphrase is defined %}
    priv_keypair_password: {{ credentials.ssh.key_passphrase }}
{% endif %}
{% endif %}
  verbose: true
platform: {{ platform.type }}
{% endfor %}
{% if platform.ha_workers is undefined %}
{% set platform.ha_workers = groups.controllers %}
{% endif %}
{% for ew in platform.ha_workers if (ew | ipv4 and ew != hostvars[platform.controller].ansible_host) or (ew != platform.controller) %}
---
op: WorkerConfig
parameters:
  config:
    node_disks: {{platform.disks.node_disks|join(',') }}
{% if platform.disks.no_tenant_storage is defined and not platform.disks.no_tenant_storage %}
    hdfs_disks: {{ platform.disks.hdfs_disks|join(',') }}
    no_tenant_storage: false
{% else %}
    hdfs_disks:
    no_tenant_storage: true
{% endif %}
    api_scheme: {{ controller.api_scheme }}
    install_type: {{ platform.install_type }}
    install_as_root: true
  host:
{% if ew | ipv4 %}
    internal_ip: {{ ew }} 
{% else %}
    internal_ip: {{ hostvars[ew].ansible_host }}
{% endif %}
  ssh: 
    username: {{ credentials.ssh.username }}
    access_type: {{ credentials.ssh.access_type }}
{% if credentials.ssh.access_type == 'password_access' %}
    password: {{ credentials.ssh.password }}
{% else %}
    keypair_file: {{ credentials.ssh.keypair_file }}
    keypair_name: {{ credentials.ssh.keypair_name }}
{% if credentials.ssh.key_passphrase is defined %}
    priv_keypair_password: {{ credentials.ssh.key_passphrase }}
{% endif %}
{% endif %}
  verbose: true
platform: {{ platform.type }} 
{% endfor %}
